name: Commit Config
run-name: ${{ github.actor }} is running commit pipeline
on:
  push:
    branches:
      - main
      - 'feature/*'
jobs:
  Commit-configuration:
    name: Commit Rules
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Checkout Repository
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - name: Check Commit Messages
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          echo "$COMMIT_MESSAGE" | grep -qE '^v[0-9]+\.[0-9]+\.[0-9]+ - .+$' || (echo "Invalid commit message format. Example: 'v0.0.3 - Implemented x on feature y.'"; exit 1)
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Check Versioning
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          VERSION=$(echo "$COMMIT_MESSAGE" | grep -oE '^v[0-9]+\.[0-9]+\.[0-9]+' || true)
          if [ -z "$VERSION" ]; then
            echo "Version not found in commit message."; 
            exit 1
          fi
          if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            MAJOR=$(echo "$VERSION" | cut -d '.' -f 1)
            MINOR=$(echo "$VERSION" | cut -d '.' -f 2)
            PATCH=$(echo "$VERSION" | cut -d '.' -f 3)
            if [[ "$MAJOR" == "0" && "$MINOR" == "0" && "$PATCH" == "0" ]]; then
              echo "Initial commit detected. Version should be v0.0.0."
              exit 1
            fi
          fi
      - run: echo "üçè This job's status is ${{ job.status }}."
